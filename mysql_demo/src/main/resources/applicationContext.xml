<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">


  <!-- 本来是com.pessimistic_lock，做bean单例/多实例 实验，改动。 -->
  <context:component-scan base-package="com"/>

  <context:property-placeholder location="dbconfig.properties"/>

  <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="jdbcUrl" value="${jdbc.url}"></property>
    <property name="driverClass" value="${jdbc.driver}"></property>
    <property name="user" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>
  </bean>-->

  <!-- 数据源配置, 使用 Druid 数据库连接池 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
<!--    <property name="driverClassName" value="${jdbc.driver}" />-->

    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

    <!-- 配置初始化大小、最小、最大 -->
<!--    <property name="initialSize" value="${jdbc.pool.init}" />-->
<!--    <property name="minIdle" value="${jdbc.pool.minIdle}" />-->
<!--    <property name="maxActive" value="${jdbc.pool.maxActive}" />-->

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />

<!--    <property name="validationQuery" value="${jdbc.testSql}" />-->
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

    <!-- 配置监控统计拦截的filters -->
    <property name="filters" value="stat" />
  </bean>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true"  propagation="SUPPORTS"/>
      <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
      <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>
      <tx:method name="query*" read-only="true" propagation="SUPPORTS"/>
      <!-- 开启新事务  -->
      <tx:method name="error*" propagation="REQUIRES_NEW"/>
      <tx:method name="common*" propagation="REQUIRED"/>
      <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.*(..))||execution(* com.*.service.*.*(..))||execution(* com.*.*.service.*.*(..))"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
  </aop:config>

  <!-- 使用注解定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
  </bean>

  <mybatis-spring:scan base-package="com.pessimistic_lock.dao"/>

</beans>